name: "Build and push Super Mario Docker image to Azure Container Registry"

on:
  push:
    branches:
      - main

env:
  ACR_NAME: devopsakaditacr                # ðŸ‘ˆ your ACR name (without .azurecr.io)
  IMAGE_NAME: devops-training              # ðŸ‘ˆ image name
  VERSION: ${{ github.run_number }}

jobs:
  build_and_push_to_acr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # âœ… 1. Login to Azure using Service Principal credentials
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # âœ… 2. Login to ACR using the logged-in Azure context (no need for ACR username/password)
      - name: Azure Container Registry Login
        run: az acr login --name ${{ env.ACR_NAME }}

      # âœ… 3. Build and push Docker image
      - name: Build and Push Docker Image to ACR
        run: |
          IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}
          docker build -t $IMAGE:${{ env.VERSION }} -t $IMAGE:latest .
          docker push $IMAGE:${{ env.VERSION }}
          docker push $IMAGE:latest

      - name: Save Docker image to tarball
        run: |
          IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}
          docker save $IMAGE:${{ env.VERSION }} -o supermariolatestdockerimage.tar

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@master
        with:
          input: ./supermariolatestdockerimage.tar
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
